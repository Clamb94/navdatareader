Build Instructions
------------------------------------------------------

Qt development packages of Core, Widgets, XML and SQL are needed with minimum version 5.4.
Additionally my atools static library is needed.

- Clone atools GIT repository
- Clone navdatareader GIT repository into the same directory

Windows
------------------------------------------------------

- Get and install Qt Creator from http://www.qt.io. Preferrably use the default installation 
  directory "C:\Qt"

- Clone atools from GIT to e.g.: "C:\Projects\atools"
- Clone navdatareader from GIT to e.g.: "C:\Projects\navdatareader"
Both projects have to reside in the same directory.

- Use "../build-%{CurrentProject:Name}-%{CurrentBuild:Name}" for "Default build directory"
  in the Qt Creator options dialog.
- Import atools and navdatareader into the Qt creator workspace.
- Configure the projects and enable shadow build for release or debug versions.

If the shadow build is configured properly:
- atools uses the build directory of e.g.: "C:\Projects\build-atools-release"
- navdatareader uses the build directory of e.g.: "C:\Projects\build-navdatareader-release"

- Set the build kit for atools and navdatareader to MinGW 32bit. MSVC is untested.

- Run qmake from Qt Creator for both projects
- Build both projects from Qt Creator
- Deploy navdatareader

Do not use the default shadow build directory names, this will break project dependencies.

Linux / macOS
------------------------------------------------------
Install Qt development packages. Version at least 5.6.

Build atools according to instructions in BUILD.txt.

Create all build directories on the same level as the source directories "atools" and "navdatareader".

To build the release version:
- mkdir build-navdatareader-release
- cd build-navdatareader-release
- qmake ../navdatareader/navdatareader.pro CONFIG+=release
- make

To build the debug version:
- mkdir build-navdatareader-debug
- cd build-navdatareader-debug
- qmake ../navdatareader/navdatareader.pro CONFIG+=debug
- make

Branches / Project Dependencies
------------------------------------------------------

Make sure to use the correct branches to avoid breaking dependencies.
The branch master is the unstable development branch but all software should compile there.

For releases check the release/MAJOR.MINOR branches to get the correct dependencies.
The atools branch is usually one MAJOR number ahead.

So a project branch release/1.2 should work well with atools release/2.2 for example.
